<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_main_8cpp" kind="file" language="C++">
    <compoundname>Main.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <includes local="no">opencv2/core/core.hpp</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <includes local="no">opencv2/imgproc/imgproc.hpp</includes>
    <includes local="no">string</includes>
    <includes refid="_blob_8h" local="yes">Blob.h</includes>
    <incdepgraph>
      <node id="15">
        <label>iomanip</label>
      </node>
      <node id="21">
        <label>Blob.h</label>
        <link refid="_blob_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="20">
        <label>string</label>
      </node>
      <node id="14">
        <label>fstream</label>
      </node>
      <node id="19">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="13">
        <label>Main.cpp</label>
        <link refid="_main_8cpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_main_8cpp_1a5f80550661781105dac995103754a262" prot="public" static="no" mutable="no">
        <type>const Scalar</type>
        <definition>const Scalar PRETO</definition>
        <argsstring></argsstring>
        <name>PRETO</name>
        <initializer>= Scalar(0.0, 0.0, 0.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define escalares de cores </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="25" column="1" bodyfile="Main.cpp" bodystart="25" bodyend="-1"/>
        <referencedby refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" compoundref="_main_8cpp" startline="106" endline="109">Contorno</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_main_8cpp_1a7c4a0519bc3e090ee4e3831391a9e018" prot="public" static="no" mutable="no">
        <type>const Scalar</type>
        <definition>const Scalar BRANCO</definition>
        <argsstring></argsstring>
        <name>BRANCO</name>
        <initializer>= Scalar(255.0, 255.0, 255.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Representação da cor Preta </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="26" column="1" bodyfile="Main.cpp" bodystart="26" bodyend="-1"/>
        <referencedby refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" compoundref="_main_8cpp" startline="106" endline="109">Contorno</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_main_8cpp_1a7b2cb89c87c76a1d832ef7ed097d9505" prot="public" static="no" mutable="no">
        <type>const Scalar</type>
        <definition>const Scalar AMARELO</definition>
        <argsstring></argsstring>
        <name>AMARELO</name>
        <initializer>= Scalar(0.0, 255.0, 255.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Representação da cor Branca </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="27" column="1" bodyfile="Main.cpp" bodystart="27" bodyend="-1"/>
        <referencedby refid="_main_8cpp_1a1ac43d4e5e9f9024d51d4df35879a7e3" compoundref="_main_8cpp" startline="182" endline="194">contador</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_main_8cpp_1aba06b79f5f073991c8a0afa7ebf9f534" prot="public" static="no" mutable="no">
        <type>const Scalar</type>
        <definition>const Scalar VERDE</definition>
        <argsstring></argsstring>
        <name>VERDE</name>
        <initializer>= Scalar(0.0, 200.0, 0.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Representação da cor Amarela </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="28" column="1" bodyfile="Main.cpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" prot="public" static="no" mutable="no">
        <type>const Scalar</type>
        <definition>const Scalar VERMELHO</definition>
        <argsstring></argsstring>
        <name>VERMELHO</name>
        <initializer>= Scalar(0.0, 0.0, 255.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Representação da cor Verde </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="29" column="1" bodyfile="Main.cpp" bodystart="29" bodyend="-1"/>
        <referencedby refid="_main_8cpp_1a4d5709a14b312373c1bebc1e0cc51479" compoundref="_main_8cpp" startline="168" endline="179">blobInfo</referencedby>
        <referencedby refid="_main_8cpp_1a1ac43d4e5e9f9024d51d4df35879a7e3" compoundref="_main_8cpp" startline="182" endline="194">contador</referencedby>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int contEsq</definition>
        <argsstring></argsstring>
        <name>contEsq</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Representação da cor Vermelha Inicializa os contadores de carros na parte esqueda e direita, respectivamente </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="32" column="1" bodyfile="Main.cpp" bodystart="32" bodyend="-1"/>
        <referencedby refid="_main_8cpp_1a1ac43d4e5e9f9024d51d4df35879a7e3" compoundref="_main_8cpp" startline="182" endline="194">contador</referencedby>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_main_8cpp_1a58d02c40e7b027e0b1ff6ce88c63280e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int contDir</definition>
        <argsstring></argsstring>
        <name>contDir</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="33" column="1" bodyfile="Main.cpp" bodystart="33" bodyend="-1"/>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_main_8cpp_1af393771749f2513a141d946bb885291b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double distPontos</definition>
        <argsstring>(Point ponto1, Point ponto2)</argsstring>
        <name>distPontos</name>
        <param>
          <type>Point</type>
          <declname>ponto1</declname>
        </param>
        <param>
          <type>Point</type>
          <declname>ponto2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calcula a distância entre os pontos </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="36" column="1" bodyfile="Main.cpp" bodystart="36" bodyend="41"/>
        <referencedby refid="_main_8cpp_1a3b43a4786c55005af285428e7c7ced87" compoundref="_main_8cpp" startline="61" endline="103">verificaBlob</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1afd251a63f3d03c2563a1f1dcf0ccb6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insereBlob</definition>
        <argsstring>(Blob &amp;blobAtual, vector&lt; Blob &gt; &amp;blobsExistentes, int &amp;intIndex)</argsstring>
        <name>insereBlob</name>
        <param>
          <type><ref refid="class_blob" kindref="compound">Blob</ref> &amp;</type>
          <declname>blobAtual</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="class_blob" kindref="compound">Blob</ref> &gt; &amp;</type>
          <declname>blobsExistentes</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>intIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define os parâmetros do blob atual no vetor de blobs existentes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="44" column="1" bodyfile="Main.cpp" bodystart="44" bodyend="52"/>
        <references refid="class_blob_1a83d705f2b426be288d87c6f606175889" compoundref="_blob_8h" startline="16">Blob::contornoAtual</references>
        <references refid="class_blob_1aa6387723adb0b9bc5972cf68cc85f4b3" compoundref="_blob_8h" startline="13">Blob::quadro</references>
        <references refid="class_blob_1a07f56ca5b367f2a9b15622d92e2c671a" compoundref="_blob_8h" startline="15">Blob::posicoesCentro</references>
        <references refid="class_blob_1ad77546934e684be45fa6d12d8370d0c7" compoundref="_blob_8h" startline="17">Blob::diagonal</references>
        <references refid="class_blob_1a0e1f64cf95a07d948728f9e00d1feec1" compoundref="_blob_8h" startline="18">Blob::proporcao</references>
        <referencedby refid="_main_8cpp_1a3b43a4786c55005af285428e7c7ced87" compoundref="_main_8cpp" startline="61" endline="103">verificaBlob</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1a71c7b1ac1ca05b2e298a38fa1f7e58f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void novoBlob</definition>
        <argsstring>(Blob &amp;blobAtual, vector&lt; Blob &gt; &amp;blobsExistentes)</argsstring>
        <name>novoBlob</name>
        <param>
          <type><ref refid="class_blob" kindref="compound">Blob</ref> &amp;</type>
          <declname>blobAtual</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="class_blob" kindref="compound">Blob</ref> &gt; &amp;</type>
          <declname>blobsExistentes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adiciona um novo blob no vetor de blobs existentes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="55" column="1" bodyfile="Main.cpp" bodystart="55" bodyend="58"/>
        <references refid="class_blob_1a121b1af88b7c0752403f6eca92ab2150" compoundref="_blob_8h" startline="19">Blob::blobAtualNovo</references>
        <referencedby refid="_main_8cpp_1a3b43a4786c55005af285428e7c7ced87" compoundref="_main_8cpp" startline="61" endline="103">verificaBlob</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1a3b43a4786c55005af285428e7c7ced87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void verificaBlob</definition>
        <argsstring>(vector&lt; Blob &gt; &amp;blobsExistentes, vector&lt; Blob &gt; &amp;blobsAtuais)</argsstring>
        <name>verificaBlob</name>
        <param>
          <type>vector&lt; <ref refid="class_blob" kindref="compound">Blob</ref> &gt; &amp;</type>
          <declname>blobsExistentes</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="class_blob" kindref="compound">Blob</ref> &gt; &amp;</type>
          <declname>blobsAtuais</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verifica se o blob atual já existe no vetor de blobs </para>        </detaileddescription>
        <inbodydescription>
<para>Inicializa as variáveis de distância </para>        </inbodydescription>
        <location file="Main.cpp" line="61" column="1" bodyfile="Main.cpp" bodystart="61" bodyend="103"/>
        <references refid="_main_8cpp_1af393771749f2513a141d946bb885291b" compoundref="_main_8cpp" startline="36" endline="41">distPontos</references>
        <references refid="_main_8cpp_1afd251a63f3d03c2563a1f1dcf0ccb6f0" compoundref="_main_8cpp" startline="44" endline="52">insereBlob</references>
        <references refid="_main_8cpp_1a71c7b1ac1ca05b2e298a38fa1f7e58f8" compoundref="_main_8cpp" startline="55" endline="58">novoBlob</references>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Contorno</definition>
        <argsstring>(Size imageSize, vector&lt; vector&lt; Point &gt;&gt; contornos, string strImageName)</argsstring>
        <name>Contorno</name>
        <param>
          <type>Size</type>
          <declname>imageSize</declname>
        </param>
        <param>
          <type>vector&lt; vector&lt; Point &gt;&gt;</type>
          <declname>contornos</declname>
        </param>
        <param>
          <type>string</type>
          <declname>strImageName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Desenha o contorno dos blobs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="106" column="1" bodyfile="Main.cpp" bodystart="106" bodyend="109"/>
        <references refid="_main_8cpp_1a5f80550661781105dac995103754a262" compoundref="_main_8cpp" startline="25">PRETO</references>
        <references refid="_main_8cpp_1a7c4a0519bc3e090ee4e3831391a9e018" compoundref="_main_8cpp" startline="26">BRANCO</references>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1a08a385c14c747c894052ff8664a51dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Contorno</definition>
        <argsstring>(Size imageSize, vector&lt; Blob &gt; blobsExistentes, string strImageName)</argsstring>
        <name>Contorno</name>
        <param>
          <type>Size</type>
          <declname>imageSize</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="class_blob" kindref="compound">Blob</ref> &gt;</type>
          <declname>blobsExistentes</declname>
        </param>
        <param>
          <type>string</type>
          <declname>strImageName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Desenha o contorno dos blobs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Main.cpp" line="112" column="1" bodyfile="Main.cpp" bodystart="112" bodyend="123"/>
        <references refid="_main_8cpp_1a5f80550661781105dac995103754a262" compoundref="_main_8cpp" startline="25">PRETO</references>
        <references refid="_main_8cpp_1a7c4a0519bc3e090ee4e3831391a9e018" compoundref="_main_8cpp" startline="26">BRANCO</references>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1a69dab197c810eaf3e966b71fd45b8df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cruzouLinhaDir</definition>
        <argsstring>(vector&lt; Blob &gt; &amp;blobsExistentes, int &amp;linhaHor, int &amp;contDir)</argsstring>
        <name>cruzouLinhaDir</name>
        <param>
          <type>vector&lt; <ref refid="class_blob" kindref="compound">Blob</ref> &gt; &amp;</type>
          <declname>blobsExistentes</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>linhaHor</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>contDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verifica se o veículo cruzou a linha da direita </para>        </detaileddescription>
        <inbodydescription>
<para>Verifica se pelo menos 1 blob cruzou a linha</para><para>Índice do frame anterior</para><para>Índice do frame atual</para><para>Se um blob cruzou a linha, incrementa o contador da via direita </para>        </inbodydescription>
        <location file="Main.cpp" line="126" column="1" bodyfile="Main.cpp" bodystart="126" bodyend="144"/>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1a6c2c44c0ed121fc428f0f2be7d870f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cruzouLinhaEsq</definition>
        <argsstring>(vector&lt; Blob &gt; &amp;blobsExistentes, int &amp;linhaHor, int &amp;contEsq)</argsstring>
        <name>cruzouLinhaEsq</name>
        <param>
          <type>vector&lt; <ref refid="class_blob" kindref="compound">Blob</ref> &gt; &amp;</type>
          <declname>blobsExistentes</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>linhaHor</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>contEsq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verifica se o veículo cruzou a linha da esquerda </para>        </detaileddescription>
        <inbodydescription>
<para>Verifica se pelo menos 1 blob cruzou a linha</para><para>Índice do frame anterior</para><para>Índice do frame atual</para><para>Se um blob cruzou a linha, incrementa o contador da via esquerda </para>        </inbodydescription>
        <location file="Main.cpp" line="147" column="1" bodyfile="Main.cpp" bodystart="147" bodyend="165"/>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1a4d5709a14b312373c1bebc1e0cc51479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blobInfo</definition>
        <argsstring>(vector&lt; Blob &gt; &amp;blobsExistentes, Mat &amp;cloneFrame2)</argsstring>
        <name>blobInfo</name>
        <param>
          <type>vector&lt; <ref refid="class_blob" kindref="compound">Blob</ref> &gt; &amp;</type>
          <declname>blobsExistentes</declname>
        </param>
        <param>
          <type>Mat &amp;</type>
          <declname>cloneFrame2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Imprime as informações do blob na tela </para>        </detaileddescription>
        <inbodydescription>
<para>Parâmetros da fonte </para>        </inbodydescription>
        <location file="Main.cpp" line="168" column="1" bodyfile="Main.cpp" bodystart="168" bodyend="179"/>
        <references refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" compoundref="_main_8cpp" startline="29">VERMELHO</references>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1a1ac43d4e5e9f9024d51d4df35879a7e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void contador</definition>
        <argsstring>(int &amp;contDir, Mat &amp;cloneFrame2)</argsstring>
        <name>contador</name>
        <param>
          <type>int &amp;</type>
          <declname>contDir</declname>
        </param>
        <param>
          <type>Mat &amp;</type>
          <declname>cloneFrame2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Imprime o contador na imagem </para>        </detaileddescription>
        <inbodydescription>
<para>Contador da via direita</para><para>Contador da via esquerda </para>        </inbodydescription>
        <location file="Main.cpp" line="182" column="1" bodyfile="Main.cpp" bodystart="182" bodyend="194"/>
        <references refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" compoundref="_main_8cpp" startline="29">VERMELHO</references>
        <references refid="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" compoundref="_main_8cpp" startline="32">contEsq</references>
        <references refid="_main_8cpp_1a7b2cb89c87c76a1d832ef7ed097d9505" compoundref="_main_8cpp" startline="27">AMARELO</references>
        <referencedby refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_main_8cpp" startline="196" endline="364">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Inicializa as linhas de referência da via direita e da esquerda, respectivamente</para><para>Caso não seja possível abrir o vídeo - Erro</para><para>Caso o vídeo tenha apenas 1 frame (imagem) - Erro</para><para>Captura 2 frames do vídeo</para><para>Controla a linha da direita</para><para>Controla a linha da esquerda</para><para>Inicializa os parâmetros para comparação dos frames</para><para>Converte os frames para a escala de cinza</para><para>Filtro de suavização gaussiano</para><para>Subtração da imagem</para><para>Limiarização</para><para>Elemento estruturante + Filtros morfológicos x2 (dilatação + erosão)</para><para>Define os contornos dos blobs</para><para>Define o envoltório convexo dos blobs</para><para>Verifica a linha da direita</para><para>Verifica a linha da esquerda</para><para>Via direita</para><para>Via esquerda</para><para>Passa o frame 2 para o frame 1</para><para>Verifica se o vídeo chegou ao fim </para>        </inbodydescription>
        <location file="Main.cpp" line="196" column="1" bodyfile="Main.cpp" bodystart="196" bodyend="364"/>
        <references refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" compoundref="_main_8cpp" startline="106" endline="109">Contorno</references>
        <references refid="class_blob_1aa6387723adb0b9bc5972cf68cc85f4b3" compoundref="_blob_8h" startline="13">Blob::quadro</references>
        <references refid="class_blob_1a0e1f64cf95a07d948728f9e00d1feec1" compoundref="_blob_8h" startline="18">Blob::proporcao</references>
        <references refid="class_blob_1ad77546934e684be45fa6d12d8370d0c7" compoundref="_blob_8h" startline="17">Blob::diagonal</references>
        <references refid="class_blob_1a83d705f2b426be288d87c6f606175889" compoundref="_blob_8h" startline="16">Blob::contornoAtual</references>
        <references refid="_main_8cpp_1a3b43a4786c55005af285428e7c7ced87" compoundref="_main_8cpp" startline="61" endline="103">verificaBlob</references>
        <references refid="_main_8cpp_1a4d5709a14b312373c1bebc1e0cc51479" compoundref="_main_8cpp" startline="168" endline="179">blobInfo</references>
        <references refid="_main_8cpp_1a69dab197c810eaf3e966b71fd45b8df3" compoundref="_main_8cpp" startline="126" endline="144">cruzouLinhaDir</references>
        <references refid="_main_8cpp_1a58d02c40e7b027e0b1ff6ce88c63280e" compoundref="_main_8cpp" startline="33">contDir</references>
        <references refid="_main_8cpp_1a6c2c44c0ed121fc428f0f2be7d870f37" compoundref="_main_8cpp" startline="147" endline="165">cruzouLinhaEsq</references>
        <references refid="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" compoundref="_main_8cpp" startline="32">contEsq</references>
        <references refid="_main_8cpp_1aba06b79f5f073991c8a0afa7ebf9f534" compoundref="_main_8cpp" startline="28">VERDE</references>
        <references refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" compoundref="_main_8cpp" startline="29">VERMELHO</references>
        <references refid="_main_8cpp_1a1ac43d4e5e9f9024d51d4df35879a7e3" compoundref="_main_8cpp" startline="182" endline="194">contador</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/core/core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/imgproc/imgproc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_blob_8h" kindref="compound">Blob.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecv" kindref="compound">cv</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="_main_8cpp_1a5f80550661781105dac995103754a262" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/><ref refid="_main_8cpp_1a5f80550661781105dac995103754a262" kindref="member">PRETO</ref><sp/>=<sp/>Scalar(0.0,<sp/>0.0,<sp/>0.0);<sp/></highlight></codeline>
<codeline lineno="26" refid="_main_8cpp_1a7c4a0519bc3e090ee4e3831391a9e018" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/><ref refid="_main_8cpp_1a7c4a0519bc3e090ee4e3831391a9e018" kindref="member">BRANCO</ref><sp/>=<sp/>Scalar(255.0,<sp/>255.0,<sp/>255.0);<sp/></highlight></codeline>
<codeline lineno="27" refid="_main_8cpp_1a7b2cb89c87c76a1d832ef7ed097d9505" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/><ref refid="_main_8cpp_1a7b2cb89c87c76a1d832ef7ed097d9505" kindref="member">AMARELO</ref><sp/>=<sp/>Scalar(0.0,<sp/>255.0,<sp/>255.0);<sp/></highlight></codeline>
<codeline lineno="28" refid="_main_8cpp_1aba06b79f5f073991c8a0afa7ebf9f534" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/><ref refid="_main_8cpp_1aba06b79f5f073991c8a0afa7ebf9f534" kindref="member">VERDE</ref><sp/>=<sp/>Scalar(0.0,<sp/>200.0,<sp/>0.0);<sp/></highlight></codeline>
<codeline lineno="29" refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/><ref refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" kindref="member">VERMELHO</ref><sp/>=<sp/>Scalar(0.0,<sp/>0.0,<sp/>255.0);<sp/></highlight></codeline>
<codeline lineno="32" refid="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" kindref="member">contEsq</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33" refid="_main_8cpp_1a58d02c40e7b027e0b1ff6ce88c63280e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a58d02c40e7b027e0b1ff6ce88c63280e" kindref="member">contDir</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_main_8cpp_1af393771749f2513a141d946bb885291b" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1af393771749f2513a141d946bb885291b" kindref="member">distPontos</ref>(Point<sp/>ponto1,<sp/>Point<sp/>ponto2)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intX<sp/>=<sp/>abs(ponto1.x<sp/>-<sp/>ponto2.x);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intY<sp/>=<sp/>abs(ponto1.y<sp/>-<sp/>ponto2.y);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sqrt(pow(intX,<sp/>2)<sp/>+<sp/>pow(intY,<sp/>2)));</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="_main_8cpp_1afd251a63f3d03c2563a1f1dcf0ccb6f0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1afd251a63f3d03c2563a1f1dcf0ccb6f0" kindref="member">insereBlob</ref>(<ref refid="class_blob" kindref="compound">Blob</ref><sp/>&amp;blobAtual,<sp/>vector&lt;Blob&gt;<sp/>&amp;blobsExistentes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;intIndex)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>blobsExistentes[intIndex].contornoAtual<sp/>=<sp/>blobAtual.<ref refid="class_blob_1a83d705f2b426be288d87c6f606175889" kindref="member">contornoAtual</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>blobsExistentes[intIndex].quadro<sp/>=<sp/>blobAtual.<ref refid="class_blob_1aa6387723adb0b9bc5972cf68cc85f4b3" kindref="member">quadro</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>blobsExistentes[intIndex].posicoesCentro.push_back(blobAtual.<ref refid="class_blob_1a07f56ca5b367f2a9b15622d92e2c671a" kindref="member">posicoesCentro</ref>.back());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>blobsExistentes[intIndex].diagonal<sp/>=<sp/>blobAtual.<ref refid="class_blob_1ad77546934e684be45fa6d12d8370d0c7" kindref="member">diagonal</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>blobsExistentes[intIndex].proporcao<sp/>=<sp/>blobAtual.<ref refid="class_blob_1a0e1f64cf95a07d948728f9e00d1feec1" kindref="member">proporcao</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>blobsExistentes[intIndex].naTela<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>blobsExistentes[intIndex].blobAtualNovo<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="_main_8cpp_1a71c7b1ac1ca05b2e298a38fa1f7e58f8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a71c7b1ac1ca05b2e298a38fa1f7e58f8" kindref="member">novoBlob</ref>(<ref refid="class_blob" kindref="compound">Blob</ref><sp/>&amp;blobAtual,<sp/>vector&lt;Blob&gt;<sp/>&amp;blobsExistentes)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>blobAtual.<ref refid="class_blob_1a121b1af88b7c0752403f6eca92ab2150" kindref="member">blobAtualNovo</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>blobsExistentes.push_back(blobAtual);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="_main_8cpp_1a3b43a4786c55005af285428e7c7ced87" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a3b43a4786c55005af285428e7c7ced87" kindref="member">verificaBlob</ref>(vector&lt;Blob&gt;<sp/>&amp;blobsExistentes,<sp/>vector&lt;Blob&gt;<sp/>&amp;blobsAtuais)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;blobExistente<sp/>:<sp/>blobsExistentes)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>blobExistente.blobAtualNovo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>blobExistente.ProxPos();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blobMenorDist;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>menorDist;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;blobAtual<sp/>:<sp/>blobsAtuais)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>blobMenorDist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>menorDist<sp/>=<sp/>100000.0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blobsExistentes.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobsExistentes[i].naTela<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/><ref refid="_main_8cpp_1af393771749f2513a141d946bb885291b" kindref="member">distPontos</ref>(blobAtual.posicoesCentro.back(),<sp/>blobsExistentes[i].proxPos);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;<sp/>menorDist)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>menorDist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blobMenorDist<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(menorDist<sp/>&lt;<sp/>blobAtual.diagonal<sp/>*<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1afd251a63f3d03c2563a1f1dcf0ccb6f0" kindref="member">insereBlob</ref>(blobAtual,<sp/>blobsExistentes,<sp/>blobMenorDist);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1a71c7b1ac1ca05b2e298a38fa1f7e58f8" kindref="member">novoBlob</ref>(blobAtual,<sp/>blobsExistentes);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;blobExistente<sp/>:<sp/>blobsExistentes)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobExistente.blobAtualNovo<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blobExistente.numFrames++;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobExistente.numFrames<sp/>&gt;=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blobExistente.naTela<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" kindref="member">Contorno</ref>(Size<sp/>imageSize,<sp/>vector&lt;vector&lt;Point&gt;&gt;<sp/>contornos,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strImageName)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>Mat<sp/>image(imageSize,<sp/>CV_8UC3,<sp/><ref refid="_main_8cpp_1a5f80550661781105dac995103754a262" kindref="member">PRETO</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>drawContours(image,<sp/>contornos,<sp/>-1,<sp/><ref refid="_main_8cpp_1a7c4a0519bc3e090ee4e3831391a9e018" kindref="member">BRANCO</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="_main_8cpp_1a08a385c14c747c894052ff8664a51dff" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" kindref="member">Contorno</ref>(Size<sp/>imageSize,<sp/>vector&lt;Blob&gt;<sp/>blobsExistentes,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strImageName)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>Mat<sp/>image(imageSize,<sp/>CV_8UC3,<sp/><ref refid="_main_8cpp_1a5f80550661781105dac995103754a262" kindref="member">PRETO</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>vector&lt;vector&lt;Point&gt;&gt;<sp/>contours;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;blob<sp/>:<sp/>blobsExistentes)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob.naTela<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>contours.push_back(blob.contornoAtual);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>drawContours(image,<sp/>contours,<sp/>-1,<sp/><ref refid="_main_8cpp_1a7c4a0519bc3e090ee4e3831391a9e018" kindref="member">BRANCO</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="_main_8cpp_1a69dab197c810eaf3e966b71fd45b8df3" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a69dab197c810eaf3e966b71fd45b8df3" kindref="member">cruzouLinhaDir</ref>(vector&lt;Blob&gt;<sp/>&amp;blobsExistentes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;linhaHor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="_main_8cpp_1a58d02c40e7b027e0b1ff6ce88c63280e" kindref="member">contDir</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blobCruzou<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameAnt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameAtual;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>blob<sp/>:<sp/>blobsExistentes)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob.naTela<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>blob.posicoesCentro.size()<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frameAnt<sp/>=<sp/>(int)blob.posicoesCentro.size()<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frameAtual<sp/>=<sp/>(int)blob.posicoesCentro.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob.posicoesCentro[frameAnt].y<sp/>&gt;<sp/>linhaHor<sp/>&amp;&amp;<sp/>blob.posicoesCentro[frameAtual].y<sp/>&lt;=<sp/>linhaHor<sp/>&amp;&amp;<sp/>blob.posicoesCentro[frameAtual].x<sp/>&gt;<sp/>350)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contDir++;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blobCruzou<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blobCruzou;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="_main_8cpp_1a6c2c44c0ed121fc428f0f2be7d870f37" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a6c2c44c0ed121fc428f0f2be7d870f37" kindref="member">cruzouLinhaEsq</ref>(vector&lt;Blob&gt;<sp/>&amp;blobsExistentes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;linhaHor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" kindref="member">contEsq</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blobCruzou<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameAnt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameAtual;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>blob<sp/>:<sp/>blobsExistentes)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob.naTela<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>blob.posicoesCentro.size()<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frameAnt<sp/>=<sp/>(int)blob.posicoesCentro.size()<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frameAtual<sp/>=<sp/>(int)blob.posicoesCentro.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob.posicoesCentro[frameAnt].y<sp/>&lt;=<sp/>linhaHor<sp/>&amp;&amp;<sp/>blob.posicoesCentro[frameAtual].y<sp/>&gt;<sp/>linhaHor<sp/>&amp;&amp;<sp/>blob.posicoesCentro[frameAtual].x<sp/>&lt;<sp/>350<sp/>&amp;&amp;<sp/>blob.posicoesCentro[frameAtual].x<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contEsq++;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blobCruzou<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blobCruzou;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="_main_8cpp_1a4d5709a14b312373c1bebc1e0cc51479" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a4d5709a14b312373c1bebc1e0cc51479" kindref="member">blobInfo</ref>(vector&lt;Blob&gt;<sp/>&amp;blobsExistentes,<sp/>Mat<sp/>&amp;cloneFrame2)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tipoFonte;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>espFonte;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>escFonte;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blobsExistentes.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobsExistentes[i].naTela<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rectangle(cloneFrame2,<sp/>blobsExistentes[i].quadro,<sp/><ref refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" kindref="member">VERMELHO</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="_main_8cpp_1a1ac43d4e5e9f9024d51d4df35879a7e3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a1ac43d4e5e9f9024d51d4df35879a7e3" kindref="member">contador</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="_main_8cpp_1a58d02c40e7b027e0b1ff6ce88c63280e" kindref="member">contDir</ref>,<sp/>Mat<sp/>&amp;cloneFrame2)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tipoFonte<sp/>=<sp/>CV_FONT_HERSHEY_SIMPLEX;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>escFonte<sp/>=<sp/>(cloneFrame2.rows<sp/>*<sp/>cloneFrame2.cols)<sp/>/<sp/>650000.0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>espFonte<sp/>=<sp/>(int)round(escFonte<sp/>*<sp/>2.5);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>Size<sp/>tamTextoD<sp/>=<sp/>getTextSize(to_string(contDir),<sp/>tipoFonte,<sp/>escFonte,<sp/>espFonte,<sp/>0);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>putText(cloneFrame2,<sp/></highlight><highlight class="stringliteral">&quot;Contador<sp/>direita:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(contDir),<sp/>Point(800,<sp/>50),<sp/>tipoFonte,<sp/>escFonte,<sp/><ref refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" kindref="member">VERMELHO</ref>,<sp/>espFonte);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>Size<sp/>tamTextoE<sp/>=<sp/>getTextSize(to_string(<ref refid="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" kindref="member">contEsq</ref>),<sp/>tipoFonte,<sp/>escFonte,<sp/>espFonte,<sp/>0);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>putText(cloneFrame2,<sp/></highlight><highlight class="stringliteral">&quot;Contador<sp/>esquerda:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" kindref="member">contEsq</ref>),<sp/>Point(10,<sp/>50),<sp/>tipoFonte,<sp/>escFonte,<sp/><ref refid="_main_8cpp_1a7b2cb89c87c76a1d832ef7ed097d9505" kindref="member">AMARELO</ref>,<sp/>espFonte);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>VideoCapture<sp/>capVideo;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>Mat<sp/>frame1,<sp/>frame2;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>vector&lt;Blob&gt;<sp/>blobsExistentes;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>Point<sp/>linhaDir[2];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>Point<sp/>linhaEsq[2];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>capVideo.open(</highlight><highlight class="stringliteral">&quot;video_transito.mp4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!capVideo.isOpened())<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Erro:<sp/>Não<sp/>foi<sp/>possível<sp/>abrir<sp/>o<sp/>vídeo!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capVideo.get(CV_CAP_PROP_FRAME_COUNT)<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Erro:<sp/>O<sp/>vídeo<sp/>deve<sp/>ter<sp/>2<sp/>frames<sp/>ou<sp/>mais!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>capVideo.read(frame1);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>capVideo.read(frame2);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linhaHorDir<sp/>=<sp/>(int)round((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)frame1.rows<sp/>*<sp/>0.3);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>linhaDir[0].x<sp/>=<sp/>350;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>linhaDir[0].y<sp/>=<sp/>linhaHorDir;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>linhaDir[1].x<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>linhaDir[1].y<sp/>=<sp/>linhaHorDir;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linhaHorEsq<sp/>=<sp/>(int)round((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)frame1.rows<sp/>*<sp/>0.15);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>linhaEsq[0].x<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>linhaEsq[0].y<sp/>=<sp/>linhaHorEsq;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>linhaEsq[1].x<sp/>=<sp/>360;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>linhaEsq[1].y<sp/>=<sp/>linhaHorEsq;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chCheckForEscKey<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>primeiroFrame<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>blobCruzou;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contFrame<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>normalizado[256];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>vector&lt;Blob&gt;<sp/>blobsAtuais;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>Mat<sp/>cloneFrame1,<sp/>cloneFrame2,<sp/>subtracao,<sp/>limiar,<sp/>limiar1,<sp/>limiar2,<sp/>cloneLimiar,<sp/>hist;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>vector&lt;vector&lt;Point&gt;&gt;<sp/>contours;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(capVideo.isOpened()<sp/>&amp;&amp;<sp/>chCheckForEscKey<sp/>!=<sp/>27)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>cloneFrame1<sp/>=<sp/>frame1.clone();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>cloneFrame2<sp/>=<sp/>frame2.clone();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>hist<sp/>=<sp/>frame1.clone();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>cvtColor(cloneFrame1,<sp/>cloneFrame1,<sp/>CV_BGR2GRAY);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>cvtColor(cloneFrame2,<sp/>cloneFrame2,<sp/>CV_BGR2GRAY);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>GaussianBlur(cloneFrame1,<sp/>cloneFrame1,<sp/>Size(5,<sp/>5),<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>GaussianBlur(cloneFrame2,<sp/>cloneFrame2,<sp/>Size(5,<sp/>5),<sp/>0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>absdiff(cloneFrame1,<sp/>cloneFrame2,<sp/>limiar);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold(limiar,<sp/>limiar,<sp/>30,<sp/>255.0,<sp/>CV_THRESH_BINARY);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>elemEstruturante<sp/>=<sp/>getStructuringElement(MORPH_RECT,<sp/>Size(3,<sp/>3));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>dilate(limiar,<sp/>limiar,<sp/>elemEstruturante,<sp/>Point(-1,<sp/>-1),<sp/>2);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>erode(limiar,<sp/>limiar,<sp/>elemEstruturante,<sp/>Point(-1,<sp/>-1),<sp/>1);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>dilate(limiar,<sp/>limiar,<sp/>elemEstruturante,<sp/>Point(-1,<sp/>-1),<sp/>2);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>erode(limiar,<sp/>limiar,<sp/>elemEstruturante,<sp/>Point(-1,<sp/>-1),<sp/>1);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>cloneLimiar<sp/>=<sp/>limiar.clone();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>findContours(cloneLimiar,<sp/>contours,<sp/>RETR_EXTERNAL,<sp/>CHAIN_APPROX_SIMPLE);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" kindref="member">Contorno</ref>(limiar.size(),<sp/>contours,<sp/></highlight><highlight class="stringliteral">&quot;Contorno&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;vector&lt;Point&gt;&gt;<sp/>convexHulls(contours.size());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>contours.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>convexHull(contours[i],<sp/>convexHulls[i]);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" kindref="member">Contorno</ref>(limiar.size(),<sp/>convexHulls,<sp/></highlight><highlight class="stringliteral">&quot;Envoltório&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;convexHull<sp/>:<sp/>convexHulls)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_blob" kindref="compound">Blob</ref><sp/>possibleBlob(convexHull);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(possibleBlob.<ref refid="class_blob_1aa6387723adb0b9bc5972cf68cc85f4b3" kindref="member">quadro</ref>.area()<sp/>&gt;<sp/>400<sp/>&amp;&amp;<sp/>possibleBlob.<ref refid="class_blob_1a0e1f64cf95a07d948728f9e00d1feec1" kindref="member">proporcao</ref><sp/>&gt;<sp/>0.2<sp/>&amp;&amp;<sp/>possibleBlob.<ref refid="class_blob_1a0e1f64cf95a07d948728f9e00d1feec1" kindref="member">proporcao</ref><sp/>&lt;<sp/>4.0<sp/>&amp;&amp;<sp/>possibleBlob.<ref refid="class_blob_1aa6387723adb0b9bc5972cf68cc85f4b3" kindref="member">quadro</ref>.width<sp/>&gt;<sp/>30<sp/>&amp;&amp;<sp/>possibleBlob.<ref refid="class_blob_1aa6387723adb0b9bc5972cf68cc85f4b3" kindref="member">quadro</ref>.height<sp/>&gt;<sp/>30<sp/>&amp;&amp;<sp/>possibleBlob.<ref refid="class_blob_1ad77546934e684be45fa6d12d8370d0c7" kindref="member">diagonal</ref><sp/>&gt;<sp/>60.0<sp/>&amp;&amp;<sp/>(contourArea(possibleBlob.<ref refid="class_blob_1a83d705f2b426be288d87c6f606175889" kindref="member">contornoAtual</ref>)<sp/>/<sp/>(double)possibleBlob.<ref refid="class_blob_1aa6387723adb0b9bc5972cf68cc85f4b3" kindref="member">quadro</ref>.area())<sp/>&gt;<sp/>0.50)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blobsAtuais.push_back(possibleBlob);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" kindref="member">Contorno</ref>(limiar.size(),<sp/>blobsAtuais,<sp/></highlight><highlight class="stringliteral">&quot;imgCurrentFrameBlobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(primeiroFrame<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;blobAtual<sp/>:<sp/>blobsAtuais)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blobsExistentes.push_back(blobAtual);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1a3b43a4786c55005af285428e7c7ced87" kindref="member">verificaBlob</ref>(blobsExistentes,<sp/>blobsAtuais);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1ada3c309241ca0406bdf3a8cce848abf2" kindref="member">Contorno</ref>(limiar.size(),<sp/>blobsExistentes,<sp/></highlight><highlight class="stringliteral">&quot;imgBlobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>cloneFrame2<sp/>=<sp/>frame2.clone();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1a4d5709a14b312373c1bebc1e0cc51479" kindref="member">blobInfo</ref>(blobsExistentes,<sp/>cloneFrame2);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>blobCruzou<sp/>=<sp/><ref refid="_main_8cpp_1a69dab197c810eaf3e966b71fd45b8df3" kindref="member">cruzouLinhaDir</ref>(blobsExistentes,<sp/>linhaHorDir,<sp/><ref refid="_main_8cpp_1a58d02c40e7b027e0b1ff6ce88c63280e" kindref="member">contDir</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>blobCruzou<sp/>=<sp/><ref refid="_main_8cpp_1a6c2c44c0ed121fc428f0f2be7d870f37" kindref="member">cruzouLinhaEsq</ref>(blobsExistentes,<sp/>linhaHorEsq,<sp/><ref refid="_main_8cpp_1a6bd1388b3554788f7d8d2019b2e00303" kindref="member">contEsq</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobCruzou<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line(cloneFrame2,<sp/>linhaDir[0],<sp/>linhaDir[1],<sp/><ref refid="_main_8cpp_1aba06b79f5f073991c8a0afa7ebf9f534" kindref="member">VERDE</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobCruzou<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line(cloneFrame2,<sp/>linhaDir[0],<sp/>linhaDir[1],<sp/><ref refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" kindref="member">VERMELHO</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobCruzou<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line(cloneFrame2,<sp/>linhaEsq[0],<sp/>linhaEsq[1],<sp/><ref refid="_main_8cpp_1aba06b79f5f073991c8a0afa7ebf9f534" kindref="member">VERDE</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobCruzou<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line(cloneFrame2,<sp/>linhaEsq[0],<sp/>linhaEsq[1],<sp/><ref refid="_main_8cpp_1a4d72d63fede13ee55603d480e2c28fd8" kindref="member">VERMELHO</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_main_8cpp_1a1ac43d4e5e9f9024d51d4df35879a7e3" kindref="member">contador</ref>(<ref refid="_main_8cpp_1a58d02c40e7b027e0b1ff6ce88c63280e" kindref="member">contDir</ref>,<sp/>cloneFrame2);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>imshow(</highlight><highlight class="stringliteral">&quot;Tela<sp/>principal&quot;</highlight><highlight class="normal">,<sp/>cloneFrame2);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>blobsAtuais.clear();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>frame1<sp/>=<sp/>frame2.clone();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((capVideo.get(CV_CAP_PROP_POS_FRAMES)<sp/>+<sp/>1)<sp/>&lt;<sp/>capVideo.get(CV_CAP_PROP_FRAME_COUNT))<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>capVideo.read(frame2);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fim<sp/>do<sp/>vídeo\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>primeiroFrame<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>contFrame++;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>chCheckForEscKey<sp/>=<sp/>waitKey(1);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chCheckForEscKey<sp/>!=<sp/>27)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>waitKey(0);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Main.cpp"/>
  </compounddef>
</doxygen>
